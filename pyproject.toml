[tool.poetry]
name = "pokedex-api"
version = "0.1.0"
description = "Projeto de estudo de FastAPI com Postgres"
authors = ["Bruno Segato <brunosegatoit@gmail.com>"]
readme = "README.md"
packages = [{ include = "pokedex" }]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.13"
fastapi = {extras = ["standard"], version = "^0.115.13"}
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
orjson = "^3.10.18"
asyncpg = "^0.30.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.41"}


[tool.poetry.group.lint.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
mypy = "^1.16.1"
bandit = "^1.8.5"
pre-commit = "^4.2.0"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.14.1"
alembic = "^1.16.2"
psycopg2-binary = "^2.9.10"


[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-asyncio = "^1.0.0"
pytest-mock = "^3.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.mypy]
check_untyped_defs = true

[tool.taskipy.variables]
src = "pokedex"

[tool.taskipy.tasks]
lint = { cmd = "flake8 {src}", help = "Roda flake8 para verificar estilo e erros", use_vars = true }
format = { cmd = "black {src} && isort {src}", help = "Aplica black e isort no código", use_vars = true }
typecheck = { cmd = "mypy {src}", help = "Roda verificação de tipos com mypy", use_vars = true }
security = { cmd = "bandit -r {src}", help = "Roda Bandit para verificar falhas de segurança no código", use_vars = true }
precommit = { cmd = "pre-commit run --all-files", help = "Executa todos os hooks do pre-commit manualmente", use_vars = true }
test = { cmd = "pytest -v tests", help = "Executa os testes com pytest" }
coverage = { cmd = "pytest -v tests --cov=pokedex --cov-report=xml", help = "Executa os testes com pytest" }
coverage-html = { cmd = "pytest -v tests --cov=pokedex --cov-report=html", help = "Executa os testes com pytest" }
